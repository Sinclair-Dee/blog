<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Chrome Bookmarks]]></title>
    <url>%2Fblog%2F2017%2F09%2F08%2FChromeBookmarks%2F</url>
    <content type="text"><![CDATA[Bookmarks bar[百度] (https://www.baidu.com/) [Google](https://www.google.com/) [UCAS Mail](https://mail.cstnet.cn/) [Quora](https://www.quora.com/) [学术](http://xueshu.baidu.com/) [Wiki](https://www.wikipedia.org/) [知乎](http://www.zhihu.com/) [翻译](https://translate.google.cn/) [词典](https://cn.bing.com/dict?FORM=HDRSC6&amp;wlexpsignin=1) [hao](http://www.hao123.com/?tn=99754424_hao_pg) [必应](http://cn.bing.com/) [学术](https://scholar.google.com/?hl=zh-CN) [SEP](http://sep.ucas.ac.cn/appStore/) [音乐](http://music.163.com/#) 科研[IEEE Xplore Digital Library](http://ieeexplore.ieee.org/Xplore/home.jsp) [上海研发公共服务平台-用户中心](http://member.sgst.cn/login.do?method=login) [CNKI翻译助手](http://dict.cnki.net/) [ABC: A System for Sequential Synthesis and Verification](https://people.eecs.berkeley.edu/~alanmi/abc/) [Ei Compendex | Most complete Engineering Database](https://www.elsevier.com/solutions/engineering-village/content/compendex) [VERILOG](http://vol.verilog.com/VOL/main.htm) [EE382C Embedded Software Systems - Lecture #6](http://users.ece.utexas.edu/~bevans/courses/ee382c/lectures/08_sdf/sdf.html) [A graduate school survival guide: &amp;quot;So long, and thanks for the Ph.D!&amp;quot;](http://www.cs.unc.edu/~azuma/hitch4.html) [上海科技创新资源数据中心](http://www.sstir.cn/) [Deep Learning with FPGA – Amund Tveit&amp;#39;s Blog](https://amundtveit.com/2016/11/23/deep-learning-with-fpga/) [【谢源评体系结构顶会 MICRO 2016】神经网络加速器仍是热点，但图计算加速器夺最佳论文（下载）-来自微信公众号新智元-wx.abbao.cn](https://wx.abbao.cn/a/11210-730cd44f2ac7787c.html) [开发 | 如何用FPGA加速卷积神经网络(CNN)？](http://mp.weixin.qq.com/s?__biz=MzI5NTIxNTg0OA==&amp;mid=2247486972&amp;idx=4&amp;sn=30a1c191b2d409b4d44a62160479f7be&amp;chksm=ec57ba7bdb20336d60e4ad4eb3a7bf831a191492fa5419bd375d7edde85ccd9b6c07ca5ff623&amp;mpshare=1&amp;scene=1&amp;srcid=0909EYR9p3J5dNln3shY0zOk#rd) [DnnWeaver: From High-Level Deep Neural Models to FPGAs](http://act-lab.org/artifacts/dnnweaver/) [hsharma35 / dnnweaver.public — Bitbucket](https://bitbucket.org/hsharma35/dnnweaver.public) [Georgia Tech](http://www.gatech.edu/) [Hadi Esmaeilzadeh](https://www.cc.gatech.edu/~hadi/) [Caffe | Installation: Ubuntu](http://caffe.berkeleyvision.org/install_apt.html) [NVIDIA Deep Learning Accelerator](http://nvdla.org/index.html) WALL[一枝红杏 | 专业网络加速器](http://www.yizhihongxing.com/) [Facebook](https://www.facebook.com/) [https://www.youtube.com](https://www.youtube.com/) [2016 Google hosts 持续更新【更新于:2016-06-23】 | 老D](http://laod.cn/hosts/2016-google-hosts.html) BBS[狄新凯的小站](http://dixinkai.top/) [GitHub](https://github.com/) [博客园 ](https://www.cnblogs.com/) [Stack Overflow](http://stackoverflow.com/) [如何搭建一个独立博客——简明 GitHub Pages与 jekyll 教程 - 读立写生](http://www.cnfeat.com/blog/2014/05/10/how-to-build-a-blog/) [标签: Hexo | Line&amp;#39;s Blog](http://fanzhenyu.me/tags/Hexo/) [使用 Hexo + NexT 搭建静态博客 | Jovey&amp;#39;s Notes](http://joveyzheng.com/2015/09/18/use-hexo-and-next-to-build-blog/) [leetcode之 Palindrome Partitioning I&amp;amp;II - 姚光超的专栏 - CSDN博客](http://blog.csdn.net/yutianzuijin/article/details/16850031) [七牛云](https://portal.qiniu.com/identity/personal) [Disqus - The #1 way to build an audience on your website](https://disqus.com/) [Ubuntu 16.04下CUDA8.0+Theano+Caffe+TensorFlow环境搭建_Linux教程_Linux公社-Linux系统门户网站](http://www.linuxidc.com/Linux/2016-09/135528.htm) Ebook[Learn Python The Hard Way](http://old.sebug.net/paper/books/LearnPythonTheHardWay/index.html) [深入 Python 3](http://old.sebug.net/paper/books/dive-into-python3/table-of-contents.html#regular-expressions) [鸟哥的Linux私房菜](http://cn.linux.vbird.org/) [Create a new book · GitBook](https://www.gitbook.com/) Coder[C9/dixinkai ](https://c9.io/dixinkai) [LeetCode](https://leetcode.com/) [hihoCoder](https://hihocoder.com/hiho) [AtCoder](https://atcoder.jp/) [LintCode](http://www.lintcode.com/en/problem/) [实验楼](https://www.shiyanlou.com/user/341855) [中国大学MOOC(慕课)_最好的在线课程学习平台](http://www.icourse163.org/) [网易云课堂 - 领先的实用技能学习平台](https://study.163.com/) [机器学习 | Coursera](https://www.coursera.org/learn/machine-learning/home/welcome) [CS 97SI: Introduction to Programming Contests](http://www.stanford.edu/class/cs97si/) [Algorithms, 4th Edition by Robert Sedgewick and Kevin Wayne](http://algs4.cs.princeton.edu/home/) [Algorithms, Part I | Coursera](https://www.coursera.org/learn/algorithms-part1/home/welcome) [Divide and Conquer, Sorting and Searching, and Randomized Algorithms | Coursera](https://www.coursera.org/learn/algorithms-divide-conquer/home/welcome?utm_medium=email&amp;utm_source=other&amp;utm_campaign=opencourse.B8E2c3blEear9RKoJLO5Cw.opencourse.announcements%7Eopencourse.B8E2c3blEear9RKoJLO5Cw.courseBranchStart) [Coding |WebIDE ](https://ide.coding.net/dashboard) [Caffe](https://dirtysalt.github.io/caffe.html#orgheadline6) [Python](https://www.python.org/) [学习编程 | Codecademy](https://www.codecademy.com/zh/) [我的课程 - 计蒜客](https://www.jisuanke.com/) [Vim文档：usr_toc](http://vimdoc.sourceforge.net/htmldoc/usr_toc.html) [Gravatar ](http://en.gravatar.com/) [OI省选算法汇总 - 算法 - hzwer.com](http://hzwer.com/1234.html) [Python Extension Packages for Windows - Christoph Gohlke](http://www.lfd.uci.edu/~gohlke/pythonlibs/#curses) [Git教程 - 廖雪峰的官方网站](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/) [Sinclair-Dee - 个人中心 - Coding.net](https://coding.net/user) [Coding | 代码托管 项目管理 WebIDE 企业服务](https://coding.net/) [GitBook](https://www.gitbook.com/new) [Kickstart](https://code.google.com/codejam/kickstart/) [OpenJudge](http://openjudge.cn/) 科研[IEEE Xplore Digital Library](http://ieeexplore.ieee.org/Xplore/home.jsp) [Deep Learning with FPGA – Amund Tveit&amp;#39;s Blog](https://amundtveit.com/2016/11/23/deep-learning-with-fpga/) [【谢源评体系结构顶会 MICRO 2016】神经网络加速器仍是热点，但图计算加速器夺最佳论文（下载）-来自微信公众号新智元-wx.abbao.cn](https://wx.abbao.cn/a/11210-730cd44f2ac7787c.html) [开发 | 如何用FPGA加速卷积神经网络(CNN)？](http://mp.weixin.qq.com/s?__biz=MzI5NTIxNTg0OA==&amp;mid=2247486972&amp;idx=4&amp;sn=30a1c191b2d409b4d44a62160479f7be&amp;chksm=ec57ba7bdb20336d60e4ad4eb3a7bf831a191492fa5419bd375d7edde85ccd9b6c07ca5ff623&amp;mpshare=1&amp;scene=1&amp;srcid=0909EYR9p3J5dNln3shY0zOk#rd) 其他[https://www.amazon.cn/ap/signin](https://www.amazon.cn/ap/signin) [内存泄漏_百度搜索](https://www.baidu.com/s?rsv_bp=0&amp;ie=utf-8&amp;dsp=ipad&amp;tn=SE_baiduhomet2_isv1k3dg&amp;rsv_idx=3&amp;wd=%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F&amp;rsv_sugtime=380&amp;inputT=19157&amp;rsv_sug3=13)]]></content>
  </entry>
  <entry>
    <title><![CDATA[Github Pages + Hexo搭建博客]]></title>
    <url>%2Fblog%2F2016%2F11%2F30%2FGithub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[前言本文整理了如何利用github + hexo 搭建个人博客。 该教程非原创，转自Line’s Blog。原为四篇博文,为了个人随时查阅，精简成了一篇。原作内容更加详实，但第一篇文章有一处小错误，同时第三篇文章中所讲的第三方服务“多说”已经关停了。本文分五部分，前四部分对应原作者fzy-Line的前四篇文章，第五部分为Hexo的官方文档。 环境搭建Github注册与配置注册到Github官网注册账号：https://github.com/ 注册成功后github会发送验证邮件到你的邮箱，请查收邮件并进行验证。 新建版本库注册完成后，点击Start a project来新建一个版本库 如果你已经注册，则在自己的主页，点击”New repository”，即可新建一个版本库 输入Repository name:yourname.github.io(yourname与你的注册用户名一致,这个就是你博客的域名了) 启用GitHub Page进入版本库后，点击右上方的setting 下来到Githubs pages栏目，点击Launch automatic page generator 来到New user site页面后点击右下角的Continue to layouts 最后点击”Publish page”,发布github默认生成的一个静态站点 至此，我们已经配置好了github默认的静态站点，并且可以访问：你的github用户名.github.io测试我们刚刚建立好的站点主页。 下载并安装Git下载根据自己电脑操作系统的位数到git官网下载相应的版本： https://git-scm.com/download/win 安装根据自己的需要安装到相应的路径下，其他的一路点击next即可 配置环境变量选中桌面图标计算机，右键选择属性，打开左边的高级系统设置，打开弹出窗口的环境变量，找到path进行编辑。 找到git的安装目录，将其复制后粘贴到path后面。注意每一个加进来的路径后面都要带英文格式的分号。 安装与配置过程可参考图文教程：git的安装和配置 测试是否安装成功windows+R输入cmd打开命令提示符窗口，输入如下命令： 1git --version 若安装成功会打印出本机安装的git的版本。 添加SSH KEY到GithubSSH Key是一个认证，让github识别绑定这台机器，允许这台机器提交。 （1）检查本机是否有SSH KEY设置 打开git bash，输入cd ~/.ssh 或cd .ssh 如果没有则提示： No such file or directory 如果有则进入~/.ssh路径下（ls查看当前路径文件，rm * 删除所有文件） （2）配置生成SSH KEY 12345678910$ cd ~ #保证当前路径在”~”下$ ssh-keygen -t rsa -C &quot;这里填写你的邮箱地址&quot;Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/xxxx_000/.ssh/id_rsa): #不填直接回车Enter passphrase (empty for no passphrase): #输入密码（可以为空）Enter same passphrase again: #再次确认密码（可以为空）Your identification has been saved in /c/Users/xxxx_000/.ssh/id_rsa. #生成的密钥Your public key has been saved in /c/Users/xxxx_000/.ssh/id_rsa.pub. #生成的公钥The key fingerprint is:e3:51:33:xx:xx:xx:xx:xxx:61:28:83:e2:81 xxxxxx@yy.com 至此，已经生成ssh key，其存放路径为：c:/Users/你电脑的用户名/.ssh/下。 注释：可生成ssh key自定义名称的密钥，默认id_rsa。 （3）复制SSH KEY到Github 到C盘你的用户目录下找到.ssh文件夹，查看里面是否有id_rsa和id_rsa.pub这两个文件。 登录GitHub系统；点击右上角账号头像的“▼”→Settings→SSH kyes→Add SSH key，Title自定义，复制id_rsa.pub的公钥内容到GitHub中Add an SSH key的key输入框，最后“Add Key”。 （4）配置账户 123$ git config --global user.name “your_username” #设置用户名$ git config --global user.email “your_registered_github_Email”#设置邮箱地址(建议用注册giuhub的邮箱) （5）测试SSH KEY是否设置成功 1$ ssh -T git@github.com 接下来会返回一些信息，并需要你输入一次yes，若生成ssh key时设置有密码则还会让你输入生成ssh key时设置的密码。 Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access. #出现词句话，说明设置成功。 SSH-KEY的生成与配置可参考图文教程window下配置SSH连接GitHub、GitHub配置ssh key： 下载并安装node.js下载根据自己电脑操作系统的位数到git官网下载相应的版本： https://nodejs.org/en/download/ 安装根据自己的需要安装到响应的地方，其他的一路点击next即可 配置环境变量选中桌面图标计算机，右键选择属性，打开左边的高级系统设置，打开弹出窗口的环境变量，找到path进行编辑。 找到node.js的安装目录，将其复制后粘贴到path后面。注意每一个加进来的路径后面都要带英文格式的分号。 测试是否安装成功windows+R输入cmd打开命令提示符窗口，输入如下命令： 1node -v 若安装成功会打印出本机安装的node.js的版本。 安装和配置hexohexo是基于node.js的静态博客，官网也是搭建在GitHub上。 安装在你喜欢的路径下新建一个文件夹blog，用来存放博客的文件，在此文件夹中右键打开Git Bash 输入如下指令进行安装： 1$ npm install -g hexo-cli 如果执行这条命令时长时间未成功，那么请先使用下面的命令将npm镜像源更改为国内的镜像，再执行上面的安装命令，因为国外的镜像源很有可能被墙了。1npm config set registry https://registry.npm.taobao.org 初始化hexo1$ hexo init hexo 这里会将Github上的hexo项目clone下来，得到hexo文件夹。 初始化成功后会在最后打印一行：INFO Start blogging with Hexo! 安装依赖文件进入到hexo文件夹 1$ cd hexo 安装依赖文件： 1$ npm install 部署形成文件：1$ hexo generate 本地测试 1$ hexo server 在浏览器输入：http://localhost:4000/ 即可访问到我们搭建好的hexo站点。 将本地hexo项目托管到Github修改全局配置文件_config.yml说明： hexo文件夹下一个_config.yml，我们称之为全局配置文件，在每个主题文件夹内还会有一个_config.yml文件，我们称之为主题配置文件。 用sublime text3或者notepad++等编辑器打开hexo文件夹下的_config.yml文件。 注意：配置文件中每个字段后面的冒号是英文格式的，且在其后要加一个空格再写值注意：配置文件中靠缩进来区分层次，不要漏了Tab 编辑最后面的deploy属性，加入代码： 123type: git repository: https://github.com/你的Github用户名/你的Github用户名.github.io.git branch: master type使用是git。 repository属性改成你的刚才创建仓库git地址。 分支branch填写master。 安装hexo-deployer-git插件1$ npm install hexo-deployer-git --save 部署到Github上依次执行以下三条命令： 1$ hexo clean #清除缓存 网页正常情况下可以忽略此条命令 1$ hexo generate #生成静态页面至public目录 1$ hexo deploy #将.deploy目录部署到GitHub 执行hexo deploy命令之后，如果最后一行打印出如下信息则表示部署成功 1INFO Deploy done: git 然后你再去访问你创建的Github pages地址，也就是：你的Github用户名.github.io，即可看到你本地的hexo项目已经被部署到github上去了。此时博客的默认主题是landscape，即上面本地测试时的样子。 hexo主题配置此部分主要讲解Hexo的站点配置、主题配置和使用以及博客文章的发布。 在Hexo中有两份主要的配置文件，其名称都是_config.yml。其中，一份位于站点根目录下，主要包含Hexo本身的配置,我们称之为全局配置文件；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项,我们称之为主题配置文件。 hexo的官方网站：https://hexo.io/，里面有hexo的详细说明文档，不过是英文的。没关系，英语不好的请往下看。 注意：配置文件中每个字段后面的冒号是英文格式的，且在其后要加一个空格再写值 比如： 1title: Myblog hexo的站点配置编辑hexo目录下的_config.yml文件，具体配置如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Site 站点信息配置，根据自己的需要进行修改title: Line&apos;s Blog #站点名，会在浏览器页面标签左上角显示subtitle: Love Coding,Enjoy Life #副标题description: fzy-line #对站点的描述，给搜索引擎看的，可以自定义author: Line #网站作者language: zh-Hans #网站语言timezone: Asia/Shanghai #时区avatar: /images/logo.jpg #网站logo，会在浏览器页面标签左上角显示# URL 博客地址,与申请的GitHub一致## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: https://fzy-line.github.io/root: /#博客链接格式permalink: :year/:month/:day/:title/permalink_defaults:# Directory #目录设置，一般不修改source_dir: source #资源文件夹，放在里面的文件会上传到github中public_dir: public #公共文件夹，存放生成的静态文件tag_dir: tags #标签文件夹，默认是tags。实际存放在source/tags中。archive_dir: archives #档案文件夹，默认是archives。category_dir: categories #分类文件夹，默认是categories。实际存放在source/categories中。code_dir: downloads/code #代码文件夹，默认是downloads/codei18n_dir: :lang #国际化文件夹，默认跟language相同skip_render: #跳过指定文件的渲染，您可使用 glob 来配置路径。# Writing 这是文章布局、写作格式的定义，一般不修改new_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace:# Category &amp; Tag #分类和标签，一般不修改default_category: uncategorizedcategory_map:tag_map:# Date / Time format #日期、时间格式，一般不修改## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination #可根据自己需要修改## Set per_page to 0 to disable paginationper_page: 6 #分页，每页文章数量pagination_dir: page# Extensions #扩展## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next #博客主题# Deployment 这里配置站点部署到Github，上一节中已经讲过## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: git@github.com:你的Github用户名.github.io.git branch: master hexo使用主题Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。 hexo官方主题下载地址：https://hexo.io/themes/，里面有多种多样的主题模板供大家选择。 这里推荐一款很火的主题：next，下面的配置也是以这个主题为例。如果你使用的是其他的主题，那么请你自己根据说明文档进行配置。 next主题的官网，有很详细的配置文档：http://theme-next.iissnan.com/ 下载主题next下载地址：https://github.com/iissnan/hexo-theme-next 到Gtihub下载此主题后解压，打开可以看到里面很多主题相关的文件，我们将此文件夹改名为next，然后将它复制到站点目录的/themes/目录下。 启用主题hexo默认是使用的landscape主题，我们可以在站点目录下的/themes/目录下看到landscape文件夹。 我们的themes文件夹里可以放很多主题的文件夹，但是实际上我们的网站采用哪一个主题，这是需要我们进行配置的，打开编辑全局配置文件，找到下面的内容： 1234# Extensions #扩展## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next #博客主题，默认是landscape 在theme字段这里填上你下载的主题的文件夹的名字，例如我们使用next主题就填上next。这样配置文件就和我们的主题文件关联起来了。 配置主题配置文件主题配置文件位于站点目录下的/themes/next/目录下，打开编辑，这里我们只贴出需要修改的地方进行介绍，如下： （1）配置基本信息 1234567891011# 网站图标，将其放在hexo站点/source/目录下favicon: /logo.jpg# 关键词，例如下面是我写的keywords: &quot;Python,Life,Android&quot;# 网站建立时间，显示在页面底部since: 2016# 网站版权声明，显示在页面底部copyright: true （2）选择外观样式 目前 NexT 支持三种 Scheme，他们是： Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白 Mist - Muse 的紧凑版本，整洁有序的单栏外观 Pisces - 双栏 Scheme，小家碧玉似的清新 找到主题配置文件的如下三行，其中#号表示注释，要启用哪一种样式就把#号去掉即可。 1234# Schemes#scheme: Muse#scheme: Mistscheme: Pisces （3）设置菜单 菜单内容的设置格式是：item name: link。其中 item name 是一个名称，这个名称并不直接显示在页面上，它将用于匹配图标以及翻译。 12345678menu: home: / archives: /archives categories: /categories tags: /tags about: /about #sitemap: /sitemap.xml #commonweal: /404.html 此设定格式是 item name: icon name，其中 item name 与上一步所配置的菜单名字对应，icon name 是 Font Awesome 图标的 名字。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。 1234567891011menu_icons: enable: true #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome home: home about: user categories: th schedule: calendar tags: tags archives: archive sitemap: sitemap commonweal: heartbeat 测试配置效果123$ hexo clean #用于清除缓存$ hexo generate #生成静态网页$ hexo server #开启本地预览 访问：http://localhost:4000/ 查看效果，如下图： 解决遇到的问题到这里会发现点击左侧菜单的分类、标签和关于会提示找不到页面。 这是因为我们只是创建了菜单，还没有创建相应的页面。 新建页面的hexo命令是： 1$ hexo new page &quot;pageName&quot; 我们新建分类、标签、关于页面： 1$ hexo new page &apos;categories&apos; 1$ hexo new page &apos;tags&apos; 1$ hexo new page &apos;about&apos; 分别执行完这三条命令后，我们会发现站点目录下的/source/目录下多了三个文件夹：categories，tags，about，每个文件夹里面都会生成一个index.md文件，如下： 默认都只会生成title和date字段，我们要为其添加上type字段，并赋值。 注意：博客文章的抬头信息中每个字段后面的冒号是英文格式的，而且其后要加一个空格再写值 categories下的index.md： 12345---title: categoriesdate: 2016-12-02 23:28:27type: categories--- tags下的index.md： 12345---title: tagsdate: 2016-12-02 23:31:23type: tags--- about下的index.md： 12345---title: aboutdate: 2016-12-02 23:31:23type: about--- 这样我们的这几个页面也就没有问题了。至此，基本的配置也就完成了，接下来介绍如何写博客与发布博客。 发布博客新建博客文章1$ hexo new &quot;postName&quot; #新建文章 实例： 新建博客《我的第一篇博客》 1$ hexo new &quot;我的第一篇博客&quot; 到站点目录下的/source/_posts/目录下可以看到生成了名为：我的第一篇博客.md的文件，这是Markdown格式的文件，可以用sublime text3或者notepad++等编辑器打开，也可以下载一个MarkdownPad来编辑Markdown文件。 Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。 如果你没有使用过Markdown编辑器，那请你自己去学习一下Markdown语法。 Markdown 语法说明(简体中文版)：http://www.appinn.com/markdown/ 编辑博客Hexo默认新建的文章抬头已有title、date、tags等属性，可能缺乏categories和meta标签，想要指定目录就需要添加categories属性，而meta标签则是为了便于搜索引擎的收录。如下： 12345---title: 我的第一篇博客date: 2016-12-02 23:44:20tags: #文章标签 可以省略--- tags字段是文章的标签，可以指定标签也可以不指定，如果要指定多个标签需要这样做： 1tags: [Linux,Http,网络] 我们可以添加上categories字段，对博客进行分类管理，然后点击主页左侧菜单的分类就可看到具体的分类。例如： 1categories: Linux 如何实现上图的阅读全文功能？ 在自己喜欢的位置添加一个：1&lt;!--more--&gt; 即可，主题会自动识别这个标签，生成对应的阅读全文按钮。 123以上是文章摘要&lt;!--more--&gt;以下是余下全文 发布博客1$ hexo clean #清除缓存 网页正常情况下可以忽略此条命令 1$ hexo generate #生成静态页面至public目录 写好之后可以现在本地预览，确定无误之后再部署到Github上。 1$ hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server） 1$ hexo deploy #将.deploy目录部署到GitHub 需要说明的是： 我们博客文章的编写都是Markdown文件，但是发布到github上的其实是html文件，将Markdown转换成html这个工作我们只要输入hexo generate命令即可，hexo会帮我们完成转换。 hexo命令简写形式1234hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot;hexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 使用简写形式可以使操作不至于太繁琐。 第三方服务的配置再次强调：在Hexo中有两份主要的配置文件，其名称都是_config.yml。其中，一份位于站点根目录下，主要包含Hexo本身的配置,我们称之为全局配置文件；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项,我们称之为主题配置文件。 博客图片存放Markdown编辑器支持插入图片，可以直接给出图片的链接，因此我们可以将图片存放在我们hexo项目的目录下，再填写对应的路径，也可以将其存放在云服务器上，然后给出链接。 在这里，我们介绍使用七牛云来进行图片托管。七牛云是国内领先的企业级云服务商,致力于打造以数据为核心的场景化PaaS服务，图片加载速度还不错，一般也不会出现图片挂掉的情况。 注册账号注册申请一个个人账号，然后激活邮箱完成注册。 官网地址：http://www.qiniu.com/ 存储图片（1）点击左侧菜单的对象存储 （2）点击上端的添加来创建存储空间 （3）填写好基本信息，点击确定创建 （4）来到新创建的存储空间，点击内容管理 （5）在内容管理中可以看到文件列表，点击上传文件 （6）可以设置上传的文件的前缀，以便进行分类管理 （7）点击关闭，回到内容管理页面查看上传的文件，复制图片链接 至此，我们就将我们博客需要的图片存储到了七牛云，然后我们只要将复制的图片链接插入到博客人文章中即可显示图片，感觉显示速度还是蛮快的。 配置第三方服务多说社会化评论（1）多说创建站点 多说官网：http://duoshuo.com/ 登录多说官网，点击主页的我要安装来到创建站点页面填写基本信息： 点击创建后出现：服务异常,请联系客服人员的错误不是因为真的出现异常，而是你填写的用户名或者其他信息不符合他的要求，只是他没有提示你，这是需要注意的地方。比如我遇到的是用户名不能使用‘-’中划线和‘_’下划线，或者多说域名填写格式错误。 （2）创建站点完成后在全局配置文件中新增duoshuo_shortname字段。 值设置成上一步中填写的值（红色方框框出部分的值） 例如： 1duoshuo_shortname: fzyLine （3）实现效果 多说分享多说分享必须与多说评论同时使用 编辑全局配置文件，添加字段 duoshuo_share，值为 true。 12# 多说分享服务duoshuo_share: true 实现效果： 不蒜子统计编辑全局配置文件中的busuanzi_count的配置项。 当enable: true时，代表开启全局开关。若site_uv、site_pv、page_pv的值均为false时，不蒜子仅作记录而不会在页面上显示。 123456789101112131415busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site site_uv: true site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; #如果使用默认的，会显示图标 site_uv_footer: # custom pv span for the whole site site_pv: true site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; #如果使用默认的，会显示图标 site_pv_footer: # custom pv span for one page only page_pv: true page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; #如果使用默认的，会显示图标 page_pv_footer: 实现效果： 可以修改成如下的样子： 当site_uv: true时，代表在页面底部显示站点的UV值。即访客数： 1234# 效果：本站访客数12345人次site_uv: truesite_uv_header: 本站访客数site_uv_footer: 人次 当site_pv: true时，代表在页面底部显示站点的PV值。即总访问量： 1234# 效果：本站总访问量12345次site_pv: truesite_pv_header: 本站总访问量site_pv_footer: 次 当page_pv: true时，代表在文章页面的标题下显示该页面的PV值（阅读数）。1234# 效果：本文总阅读量12345次page_pv: truepage_pv_header: 本文总阅读量page_pv_footer: 次 站内搜索next主题的官方文档提供了几种实现搜索服务的方式，我们就使用配置最简单的Local Search，添加百度/谷歌/本地 自定义站点内容搜索。 （1）安装 hexo-generator-searchdb，在站点目录下执行以下命令： 1$ npm install hexo-generator-searchdb --save （2）编辑全局配置文件，新增以下内容到任意位置： 12345search: path: search.xml field: post format: html limit: 10000 （3）实现效果： 开启打赏功能next主题开启打赏功能很简单，我们只需要在全局配置文件中填入微信和支付宝收款二维码图片地址即可开启该功能。先到微信和支付宝将自己收款二维码图片保存，我们同样可以将其存在七牛云上，然后贴到下面的配置文件里。 123reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！wechatpay: 微信当面付图片的urlalipay: 支付宝当面付图片的url 实现效果：略 相关问题补充博客备份工具一直想着怎么把博客备份一下，以便丢失时或者是换电脑时能够接着写博客，终于找到一个靠谱的插件，直接将文件备份在博客的仓库中的不同分支，十分方便。项目地址：https://github.com/coneycode/hexo-git-backup 安装 如果hexo的版本是2.x.x则执行如下命令: 1$ npm install hexo-git-backup@0.0.91 --save 如果hexo的版本是3.x.x, 则执行: 1$ npm install hexo-git-backup --save 配置 在站点配置文件_config.yml中添加如下信息： 12345backup: type: git # 指定提交类型 message: update xxx # 添加git commit信息 repository: # 指定仓库类型和地址 github: git@github.com:xxx/xxx.git,分支名字 运行 使用 1hexo backup 或者 1hexo b 备份成功后，可以在Github上查看我们新建的备份分支。 使用Latex数学公式 Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签，比如在markdown语法中，下划线’_’代表斜体，会被渲染引擎处理为标签。 因为类Latex格式书写的数学公式下划线 ‘_’ 表示下标，有特殊的含义，如果被强制转换为标签，那么MathJax引擎在渲染数学公式的时候就会出错。例如，$x_i$在开始被渲染的时候，处理为$xi$，这样MathJax引擎就认为该公式有语法错误，因为不会渲染。 类似的语义冲突的符号还包括’*’, ‘{‘, ‘}’, ‘\’等。 进入到主题目录，找到_config.yml配置问题，把mathjax默认的false修改为true，具体如下： 1234# MathJax Supportmathjax: enable: true per_page: true 此外，还需要在文章的Front-matter里打开mathjax开关，如下： 123456---title: index.htmldate: 2017-03-28 21:01:30tags:mathjax: true-- 插入图片 前面说过使用七牛云进行图片存储，其实也可以直接使用我们的Hexo github仓库进行图片存储。 方法一：在hexo/source目录下新建一个img文件夹，将图片放入该文件夹下，插入图片时链接即为/img/图片名称 方法二：直接将图片放在public目录下对应的博客文章的目录下。 1![你想输入的替代文字](xxxx/图片名.jpg) 但是，这样做也存在一定的缺点，因为Github仓库的的大小也是受限的，所以图片太多就比较麻烦了，所以还是建议用图床等其他云存储方式。 插入音乐 网音乐云音乐，虾米音乐都可以生成内嵌音乐的html代码，在其网页端找到喜欢的歌曲，点击分享按钮，把里面的代码复制下来，直接粘贴到博文中即可: 123&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;http://music.163.com/outchain/player?type=2&amp;id=450853439&amp;auto=1&amp;height=66&quot;&gt; &lt;/iframe&gt; 插入视频 将优酷等视频平台提供的视频外链或者自己制作的视频外链替换掉如下src的值即可。 12345&lt;iframe height=498 width=510 src=&quot;http://player.youku.com/embed/XNjcyMDU4Njg0&quot; frameborder=0 allowfullscreen&gt; &lt;/iframe&gt; 百度/google收录你的站点安装sitemap插件12npm install hexo-generator-sitemap --save # googlenpm install hexo-generator-baidu-sitemap --save # 百度 在站点配置文件_config.yml中添加如下代码： 12345# 自动生成sitemapsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml 执行hexo -g后会在public目录下生成baidusitmap.xml 和 sitemap.xml两个文件。 Hexo 3.xx版本的问题 Hexo 3.0 把服务器独立成了个别模块，您必须先安装 hexo-server 才能使用。 1$ npm install hexo-server --save 安装完成后，输入以下命令以启动服务器，您的网站会在 http://localhost:4000 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。 然后，通过如下命令可开启本地预览： 1$ hexo server 或者 1hexo s 如果您想要更改端口，或是在执行时遇到了 EADDRINUSE 错误，可以在执行时使用 -p 选项指定其他端口，如下： 1$ hexo server -p 5000 Hello Hexo:Quick StartWelcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Create a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
</search>
