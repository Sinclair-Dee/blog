<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>狄新凯的博客</title>
  
  <subtitle>Research and Coding</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://www.dixinkai.top/blog/"/>
  <updated>2018-01-22T06:01:10.148Z</updated>
  <id>https://www.dixinkai.top/blog/</id>
  
  <author>
    <name>Sinclair-Dee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Chrome Bookmarks</title>
    <link href="https://www.dixinkai.top/blog/2017/09/08/ChromeBookmarks/"/>
    <id>https://www.dixinkai.top/blog/2017/09/08/ChromeBookmarks/</id>
    <published>2017-09-08T16:00:00.000Z</published>
    <updated>2018-01-22T06:01:10.148Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Bookmarks-bar"><a href="#Bookmarks-bar" class="headerlink" title="Bookmarks bar"></a>Bookmarks bar</h3><p><a href="https://www.baidu.com/" target="_blank" rel="external">百度</a></p><p><a href="https://www.google.com/" target="_blank" rel="external">Google</a></p><p><a href="https://mail.cstnet.cn/" target="_blank" rel="external">UCAS Mail</a></p><p><a href="https://www.quora.com/" target="_blank" rel="external">Quora</a></p><p><a href="http://xueshu.baidu.com/" target="_blank" rel="external">学术</a></p><p><a href="https://www.wikipedia.org/" target="_blank" rel="external">Wiki</a></p><p><a href="http://www.zhihu.com/" target="_blank" rel="external">知乎</a></p><p><a href="https://translate.google.cn/" target="_blank" rel="external">翻译</a></p><p><a href="https://cn.bing.com/dict?FORM=HDRSC6&amp;wlexpsignin=1" target="_blank" rel="external">词典</a></p><p><a href="http://www.hao123.com/?tn=99754424_hao_pg" target="_blank" rel="external">hao</a></p><p><a href="http://cn.bing.com/" target="_blank" rel="external">必应</a></p><p><a href="https://scholar.google.com/?hl=zh-CN" target="_blank" rel="external">学术</a></p><p><a href="http://sep.ucas.ac.cn/appStore/" target="_blank" rel="external">SEP</a></p><p><a href="http://music.163.com/#" target="_blank" rel="external">音乐</a></p><h3 id="科研"><a href="#科研" class="headerlink" title="科研"></a>科研</h3><p><a href="http://ieeexplore.ieee.org/Xplore/home.jsp" target="_blank" rel="external">IEEE Xplore Digital Library</a></p><p><a href="http://member.sgst.cn/login.do?method=login" target="_blank" rel="external">上海研发公共服务平台-用户中心</a></p><p><a href="http://dict.cnki.net/" target="_blank" rel="external">CNKI翻译助手</a></p><p><a href="https://people.eecs.berkeley.edu/~alanmi/abc/" target="_blank" rel="external">ABC: A System for Sequential Synthesis and Verification</a></p><p><a href="https://www.elsevier.com/solutions/engineering-village/content/compendex" target="_blank" rel="external">Ei Compendex | Most complete Engineering Database</a></p><p><a href="http://vol.verilog.com/VOL/main.htm" target="_blank" rel="external">VERILOG</a></p><p><a href="http://users.ece.utexas.edu/~bevans/courses/ee382c/lectures/08_sdf/sdf.html" target="_blank" rel="external">EE382C Embedded Software Systems - Lecture #6</a></p><p><a href="http://www.cs.unc.edu/~azuma/hitch4.html" target="_blank" rel="external">A graduate school survival guide: &quot;So long, and thanks for the Ph.D!&quot;</a></p><p><a href="http://www.sstir.cn/" target="_blank" rel="external">上海科技创新资源数据中心</a></p><p><a href="https://amundtveit.com/2016/11/23/deep-learning-with-fpga/" target="_blank" rel="external">Deep Learning with FPGA – Amund Tveit&#39;s Blog</a></p><p><a href="https://wx.abbao.cn/a/11210-730cd44f2ac7787c.html" target="_blank" rel="external">【谢源评体系结构顶会 MICRO 2016】神经网络加速器仍是热点，但图计算加速器夺最佳论文（下载）-来自微信公众号新智元-wx.abbao.cn</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5NTIxNTg0OA==&amp;mid=2247486972&amp;idx=4&amp;sn=30a1c191b2d409b4d44a62160479f7be&amp;chksm=ec57ba7bdb20336d60e4ad4eb3a7bf831a191492fa5419bd375d7edde85ccd9b6c07ca5ff623&amp;mpshare=1&amp;scene=1&amp;srcid=0909EYR9p3J5dNln3shY0zOk#rd" target="_blank" rel="external">开发 | 如何用FPGA加速卷积神经网络(CNN)？</a></p><p><a href="http://act-lab.org/artifacts/dnnweaver/" target="_blank" rel="external">DnnWeaver: From High-Level Deep Neural Models to FPGAs</a></p><p><a href="https://bitbucket.org/hsharma35/dnnweaver.public" target="_blank" rel="external">hsharma35 / dnnweaver.public — Bitbucket</a></p><p><a href="http://www.gatech.edu/" target="_blank" rel="external">Georgia Tech</a></p><p><a href="https://www.cc.gatech.edu/~hadi/" target="_blank" rel="external">Hadi Esmaeilzadeh</a></p><p><a href="http://caffe.berkeleyvision.org/install_apt.html" target="_blank" rel="external">Caffe | Installation: Ubuntu</a></p><p><a href="http://nvdla.org/index.html" target="_blank" rel="external">NVIDIA Deep Learning Accelerator</a></p><h3 id="WALL"><a href="#WALL" class="headerlink" title="WALL"></a>WALL</h3><p><a href="http://www.yizhihongxing.com/" target="_blank" rel="external">一枝红杏 | 专业网络加速器</a></p><p><a href="https://www.facebook.com/" target="_blank" rel="external">Facebook</a></p><p><a href="https://www.youtube.com/" target="_blank" rel="external">https://www.youtube.com</a></p><p><a href="http://laod.cn/hosts/2016-google-hosts.html" target="_blank" rel="external">2016 Google hosts 持续更新【更新于:2016-06-23】 | 老D</a></p><h3 id="BBS"><a href="#BBS" class="headerlink" title="BBS"></a>BBS</h3><p><a href="http://dixinkai.top/" target="_blank" rel="external">狄新凯的小站</a></p><p><a href="https://github.com/" target="_blank" rel="external">GitHub</a></p><p><a href="https://www.cnblogs.com/" target="_blank" rel="external">博客园 </a></p><p><a href="http://stackoverflow.com/" target="_blank" rel="external">Stack Overflow</a></p><p><a href="http://www.cnfeat.com/blog/2014/05/10/how-to-build-a-blog/" target="_blank" rel="external">如何搭建一个独立博客——简明 GitHub Pages与 jekyll 教程 - 读立写生</a></p><p><a href="http://fanzhenyu.me/tags/Hexo/" target="_blank" rel="external">标签: Hexo | Line&#39;s Blog</a></p><p><a href="http://joveyzheng.com/2015/09/18/use-hexo-and-next-to-build-blog/" target="_blank" rel="external">使用 Hexo + NexT 搭建静态博客 | Jovey&#39;s Notes</a></p><p><a href="http://blog.csdn.net/yutianzuijin/article/details/16850031" target="_blank" rel="external">leetcode之 Palindrome Partitioning I&amp;II - 姚光超的专栏 - CSDN博客</a></p><p><a href="https://portal.qiniu.com/identity/personal" target="_blank" rel="external">七牛云</a></p><p><a href="https://disqus.com/" target="_blank" rel="external">Disqus - The #1 way to build an audience on your website</a></p><p><a href="http://www.linuxidc.com/Linux/2016-09/135528.htm" target="_blank" rel="external">Ubuntu 16.04下CUDA8.0+Theano+Caffe+TensorFlow环境搭建_Linux教程_Linux公社-Linux系统门户网站</a></p><h3 id="Ebook"><a href="#Ebook" class="headerlink" title="Ebook"></a>Ebook</h3><p><a href="http://old.sebug.net/paper/books/LearnPythonTheHardWay/index.html" target="_blank" rel="external">Learn Python The Hard Way</a></p><p><a href="http://old.sebug.net/paper/books/dive-into-python3/table-of-contents.html#regular-expressions" target="_blank" rel="external">深入 Python 3</a></p><p><a href="http://cn.linux.vbird.org/" target="_blank" rel="external">鸟哥的Linux私房菜</a></p><p><a href="https://www.gitbook.com/" target="_blank" rel="external">Create a new book · GitBook</a></p><h3 id="Coder"><a href="#Coder" class="headerlink" title="Coder"></a>Coder</h3><pre><code>[C9/dixinkai ](https://c9.io/dixinkai)[LeetCode](https://leetcode.com/)[hihoCoder](https://hihocoder.com/hiho)[AtCoder](https://atcoder.jp/)[LintCode](http://www.lintcode.com/en/problem/)[实验楼](https://www.shiyanlou.com/user/341855)[中国大学MOOC(慕课)_最好的在线课程学习平台](http://www.icourse163.org/)[网易云课堂 - 领先的实用技能学习平台](https://study.163.com/)[机器学习 | Coursera](https://www.coursera.org/learn/machine-learning/home/welcome)[CS 97SI: Introduction to Programming Contests](http://www.stanford.edu/class/cs97si/)[Algorithms, 4th Edition by Robert Sedgewick and Kevin Wayne](http://algs4.cs.princeton.edu/home/)[Algorithms, Part I | Coursera](https://www.coursera.org/learn/algorithms-part1/home/welcome)[Divide and Conquer, Sorting and Searching, and Randomized Algorithms | Coursera](https://www.coursera.org/learn/algorithms-divide-conquer/home/welcome?utm_medium=email&amp;utm_source=other&amp;utm_campaign=opencourse.B8E2c3blEear9RKoJLO5Cw.opencourse.announcements%7Eopencourse.B8E2c3blEear9RKoJLO5Cw.courseBranchStart)[Coding |WebIDE ](https://ide.coding.net/dashboard)[Caffe](https://dirtysalt.github.io/caffe.html#orgheadline6)[Python](https://www.python.org/)[学习编程 | Codecademy](https://www.codecademy.com/zh/)[我的课程 - 计蒜客](https://www.jisuanke.com/)[Vim文档：usr_toc](http://vimdoc.sourceforge.net/htmldoc/usr_toc.html)[Gravatar ](http://en.gravatar.com/)[OI省选算法汇总 - 算法 - hzwer.com](http://hzwer.com/1234.html)[Python Extension Packages for Windows - Christoph Gohlke](http://www.lfd.uci.edu/~gohlke/pythonlibs/#curses)[Git教程 - 廖雪峰的官方网站](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/)[Sinclair-Dee - 个人中心 - Coding.net](https://coding.net/user)[Coding | 代码托管 项目管理 WebIDE 企业服务](https://coding.net/)[GitBook](https://www.gitbook.com/new)[Kickstart](https://code.google.com/codejam/kickstart/)[OpenJudge](http://openjudge.cn/)</code></pre><h3 id="科研-1"><a href="#科研-1" class="headerlink" title="科研"></a>科研</h3><pre><code>[IEEE Xplore Digital Library](http://ieeexplore.ieee.org/Xplore/home.jsp)[Deep Learning with FPGA – Amund Tveit&amp;#39;s Blog](https://amundtveit.com/2016/11/23/deep-learning-with-fpga/)[【谢源评体系结构顶会 MICRO 2016】神经网络加速器仍是热点，但图计算加速器夺最佳论文（下载）-来自微信公众号新智元-wx.abbao.cn](https://wx.abbao.cn/a/11210-730cd44f2ac7787c.html)[开发 | 如何用FPGA加速卷积神经网络(CNN)？](http://mp.weixin.qq.com/s?__biz=MzI5NTIxNTg0OA==&amp;mid=2247486972&amp;idx=4&amp;sn=30a1c191b2d409b4d44a62160479f7be&amp;chksm=ec57ba7bdb20336d60e4ad4eb3a7bf831a191492fa5419bd375d7edde85ccd9b6c07ca5ff623&amp;mpshare=1&amp;scene=1&amp;srcid=0909EYR9p3J5dNln3shY0zOk#rd)</code></pre><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><pre><code>[https://www.amazon.cn/ap/signin](https://www.amazon.cn/ap/signin)[内存泄漏_百度搜索](https://www.baidu.com/s?rsv_bp=0&amp;ie=utf-8&amp;dsp=ipad&amp;tn=SE_baiduhomet2_isv1k3dg&amp;rsv_idx=3&amp;wd=%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F&amp;rsv_sugtime=380&amp;inputT=19157&amp;rsv_sug3=13)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Bookmarks-bar&quot;&gt;&lt;a href=&quot;#Bookmarks-bar&quot; class=&quot;headerlink&quot; title=&quot;Bookmarks bar&quot;&gt;&lt;/a&gt;Bookmarks bar&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.baidu
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Github Pages + Hexo搭建博客</title>
    <link href="https://www.dixinkai.top/blog/2016/11/30/Github-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://www.dixinkai.top/blog/2016/11/30/Github-Pages-Hexo搭建博客/</id>
    <published>2016-11-30T04:12:10.000Z</published>
    <updated>2018-01-19T17:22:21.687Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本文整理了如何利用github + hexo 搭建个人博客。</p><a id="more"></a><p>该教程非原创，转自<a href="http://fanzhenyu.me/tags/Hexo/" target="_blank" rel="external">Line’s Blog</a>。原为四篇博文,为了个人随时查阅，精简成了一篇。原作内容更加详实，但第一篇文章有一处小错误，同时第三篇文章中所讲的第三方服务“多说”已经关停了。<br>本文分五部分，前四部分对应原作者fzy-Line的前四篇文章，第五部分为Hexo的官方文档。</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><h4 id="Github注册与配置"><a href="#Github注册与配置" class="headerlink" title="Github注册与配置"></a>Github注册与配置</h4><h5 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h5><p>到Github官网注册账号：<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a> 注册成功后github会发送验证邮件到你的邮箱，请查收邮件并进行验证。</p><h5 id="新建版本库"><a href="#新建版本库" class="headerlink" title="新建版本库"></a>新建版本库</h5><p>注册完成后，点击Start a project来新建一个版本库</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/11/30-1.png" alt="30-1"></p><p>如果你已经注册，则在自己的主页，点击”New repository”，即可新建一个版本库</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/11/30-2.png" alt="30-2"></p><p>输入Repository name:yourname.github.io(yourname与你的注册用户名一致,这个就是你博客的域名了)</p><h5 id="启用GitHub-Page"><a href="#启用GitHub-Page" class="headerlink" title="启用GitHub Page"></a>启用GitHub Page</h5><p>进入版本库后，点击右上方的setting</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/11/30-3.png" alt="30-3"></p><p>下来到Githubs pages栏目，点击Launch automatic page generator</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/11/30-4.png" alt="30-4"></p><p>来到New user site页面后点击右下角的Continue to layouts</p><p>最后点击”Publish page”,发布github默认生成的一个静态站点</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/11/30-5.png" alt="30-5"></p><p>至此，我们已经配置好了github默认的静态站点，并且可以访问：你的github用户名.github.io测试我们刚刚建立好的站点主页。</p><h4 id="下载并安装Git"><a href="#下载并安装Git" class="headerlink" title="下载并安装Git"></a>下载并安装Git</h4><h5 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h5><p>根据自己电脑操作系统的位数到git官网下载相应的版本：</p><p><a href="https://git-scm.com/download/win" target="_blank" rel="external">https://git-scm.com/download/win</a></p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>根据自己的需要安装到相应的路径下，其他的一路点击next即可</p><h5 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h5><p>选中桌面图标计算机，右键选择属性，打开左边的高级系统设置，打开弹出窗口的环境变量，找到path进行编辑。</p><p>找到git的安装目录，将其复制后粘贴到path后面。注意每一个加进来的路径后面都要带英文格式的分号。</p><p>安装与配置过程可参考图文教程：<a href="http://jingyan.baidu.com/article/9f7e7ec0b17cac6f2815548d.html" target="_blank" rel="external">git的安装和配置</a></p><h5 id="测试是否安装成功"><a href="#测试是否安装成功" class="headerlink" title="测试是否安装成功"></a>测试是否安装成功</h5><p>windows+R输入cmd打开命令提示符窗口，输入如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git --version</div></pre></td></tr></table></figure><p>若安装成功会打印出本机安装的git的版本。</p><h5 id="添加SSH-KEY到Github"><a href="#添加SSH-KEY到Github" class="headerlink" title="添加SSH KEY到Github"></a>添加SSH KEY到Github</h5><p>SSH Key是一个认证，让github识别绑定这台机器，允许这台机器提交。</p><p><strong>（1）检查本机是否有SSH KEY设置</strong></p><p>打开git bash，输入cd ~/.ssh 或cd .ssh</p><p>如果没有则提示： No such file or directory</p><p>如果有则进入~/.ssh路径下（ls查看当前路径文件，rm * 删除所有文件）</p><p><strong>（2）配置生成SSH KEY</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ cd ~  #保证当前路径在”~”下</div><div class="line">$ ssh-keygen -t rsa -C &quot;这里填写你的邮箱地址&quot;</div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file in which to save the key (/c/Users/xxxx_000/.ssh/id_rsa):   #不填直接回车</div><div class="line">Enter passphrase (empty for no passphrase):   #输入密码（可以为空）</div><div class="line">Enter same passphrase again:   #再次确认密码（可以为空）</div><div class="line">Your identification has been saved in /c/Users/xxxx_000/.ssh/id_rsa.   #生成的密钥</div><div class="line">Your public key has been saved in /c/Users/xxxx_000/.ssh/id_rsa.pub.  #生成的公钥</div><div class="line">The key fingerprint is:</div><div class="line">e3:51:33:xx:xx:xx:xx:xxx:61:28:83:e2:81 xxxxxx@yy.com</div></pre></td></tr></table></figure><p>至此，已经生成ssh key，其存放路径为：c:/Users/你电脑的用户名/.ssh/下。</p><p>注释：可生成ssh key自定义名称的密钥，默认id_rsa。</p><p><strong>（3）复制SSH KEY到Github</strong></p><p>到C盘你的用户目录下找到.ssh文件夹，查看里面是否有id_rsa和id_rsa.pub这两个文件。</p><p>登录GitHub系统；点击右上角账号头像的“▼”→Settings→SSH kyes→Add SSH key，Title自定义，复制id_rsa.pub的公钥内容到GitHub中Add an SSH key的key输入框，最后“Add Key”。</p><p><strong>（4）配置账户</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name “your_username”  #设置用户名</div><div class="line">$ git config --global user.email “your_registered_github_Email”</div><div class="line">#设置邮箱地址(建议用注册giuhub的邮箱)</div></pre></td></tr></table></figure><p><strong>（5）测试SSH KEY是否设置成功</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure><p>接下来会返回一些信息，并需要你输入一次yes，若生成ssh key时设置有密码则还会让你输入生成ssh key时设置的密码。</p><p>Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access. #出现词句话，说明设置成功。</p><p>SSH-KEY的生成与配置可参考图文教程<a href="http://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html" target="_blank" rel="external">window下配置SSH连接GitHub、GitHub配置ssh key：</a></p><h4 id="下载并安装node-js"><a href="#下载并安装node-js" class="headerlink" title="下载并安装node.js"></a>下载并安装node.js</h4><h5 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h5><p>根据自己电脑操作系统的位数到git官网下载相应的版本：</p><p><a href="https://nodejs.org/en/download/" target="_blank" rel="external">https://nodejs.org/en/download/</a></p><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><p>根据自己的需要安装到响应的地方，其他的一路点击next即可</p><h5 id="配置环境变量-1"><a href="#配置环境变量-1" class="headerlink" title="配置环境变量"></a>配置环境变量</h5><p>选中桌面图标计算机，右键选择属性，打开左边的高级系统设置，打开弹出窗口的环境变量，找到path进行编辑。</p><p>找到node.js的安装目录，将其复制后粘贴到path后面。注意每一个加进来的路径后面都要带英文格式的分号。</p><h5 id="测试是否安装成功-1"><a href="#测试是否安装成功-1" class="headerlink" title="测试是否安装成功"></a>测试是否安装成功</h5><p>windows+R输入cmd打开命令提示符窗口，输入如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node -v</div></pre></td></tr></table></figure><p>若安装成功会打印出本机安装的node.js的版本。</p><h4 id="安装和配置hexo"><a href="#安装和配置hexo" class="headerlink" title="安装和配置hexo"></a>安装和配置hexo</h4><p>hexo是基于node.js的静态博客，官网也是搭建在GitHub上。</p><h5 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h5><p>在你喜欢的路径下新建一个文件夹blog，用来存放博客的文件，在此文件夹中右键打开Git Bash</p><p>输入如下指令进行安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure><p>如果执行这条命令时长时间未成功，那么请先使用下面的命令将npm镜像源更改为国内的镜像，再执行上面的安装命令，因为国外的镜像源很有可能被墙了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm config set registry https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p><h5 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init hexo</div></pre></td></tr></table></figure><p>这里会将Github上的hexo项目clone下来，得到hexo文件夹。</p><p>初始化成功后会在最后打印一行：INFO  Start blogging with Hexo!</p><h5 id="安装依赖文件"><a href="#安装依赖文件" class="headerlink" title="安装依赖文件"></a>安装依赖文件</h5><p>进入到hexo文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cd hexo</div></pre></td></tr></table></figure><p>安装依赖文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure><p>部署形成文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure></p><p>本地测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/11/30-6.png" alt="30-6"></p><p>在浏览器输入：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 即可访问到我们搭建好的hexo站点。</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/11/30-7.png" alt="30-7"></p><h5 id="将本地hexo项目托管到Github"><a href="#将本地hexo项目托管到Github" class="headerlink" title="将本地hexo项目托管到Github"></a>将本地hexo项目托管到Github</h5><h5 id="修改全局配置文件-config-yml"><a href="#修改全局配置文件-config-yml" class="headerlink" title="修改全局配置文件_config.yml"></a>修改全局配置文件_config.yml</h5><p><strong>说明：</strong> hexo文件夹下一个_config.yml，我们称之为全局配置文件，在每个主题文件夹内还会有一个_config.yml文件，我们称之为主题配置文件。</p><p>用sublime text3或者notepad++等编辑器打开hexo文件夹下的_config.yml文件。</p><p><strong>注意：配置文件中每个字段后面的冒号是英文格式的，且在其后要加一个空格再写值</strong><br><strong>注意：配置文件中靠缩进来区分层次，不要漏了Tab</strong></p><p>编辑最后面的deploy属性，加入代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">type: git</div><div class="line">  repository: https://github.com/你的Github用户名/你的Github用户名.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure><p>type使用是git。</p><p>repository属性改成你的刚才创建仓库git地址。</p><p>分支branch填写master。</p><h5 id="安装hexo-deployer-git插件"><a href="#安装hexo-deployer-git插件" class="headerlink" title="安装hexo-deployer-git插件"></a>安装hexo-deployer-git插件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure><h5 id="部署到Github上"><a href="#部署到Github上" class="headerlink" title="部署到Github上"></a>部署到Github上</h5><p>依次执行以下三条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo clean  #清除缓存 网页正常情况下可以忽略此条命令</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate  #生成静态页面至public目录</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy  #将.deploy目录部署到GitHub</div></pre></td></tr></table></figure><p>执行hexo deploy命令之后，如果最后一行打印出如下信息则表示部署成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO  Deploy done: git</div></pre></td></tr></table></figure><p>然后你再去访问你创建的Github pages地址，也就是：你的Github用户名.github.io，即可看到<br>你本地的hexo项目已经被部署到github上去了。此时博客的默认主题是landscape，即上面本地测试时的样子。</p><h3 id="hexo主题配置"><a href="#hexo主题配置" class="headerlink" title="hexo主题配置"></a>hexo主题配置</h3><p>此部分主要讲解Hexo的站点配置、主题配置和使用以及博客文章的发布。</p><p>在Hexo中有两份主要的配置文件，其名称都是_config.yml。其中，一份位于站点根目录下，主要包含Hexo本身的配置,我们称之为<strong>全局配置文件</strong>；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项,我们称之为<strong>主题配置文件</strong>。</p><p>hexo的官方网站：<a href="https://hexo.io/" target="_blank" rel="external">https://hexo.io/</a>，里面有hexo的详细说明文档，不过是英文的。没关系，英语不好的请往下看。</p><p><strong>注意：配置文件中每个字段后面的冒号是英文格式的，且在其后要加一个空格再写值</strong></p><p>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">title: Myblog</div></pre></td></tr></table></figure><h4 id="hexo的站点配置"><a href="#hexo的站点配置" class="headerlink" title="hexo的站点配置"></a>hexo的站点配置</h4><p>编辑hexo目录下的_config.yml文件，具体配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"># Hexo Configuration</div><div class="line">## Docs: https://hexo.io/docs/configuration.html</div><div class="line">## Source: https://github.com/hexojs/hexo/</div><div class="line"></div><div class="line"># Site 站点信息配置，根据自己的需要进行修改</div><div class="line">title: Line&apos;s Blog    #站点名，会在浏览器页面标签左上角显示</div><div class="line">subtitle: Love Coding,Enjoy Life  #副标题</div><div class="line">description: fzy-line  #对站点的描述，给搜索引擎看的，可以自定义</div><div class="line">author: Line  #网站作者</div><div class="line">language: zh-Hans  #网站语言</div><div class="line">timezone: Asia/Shanghai  #时区</div><div class="line">avatar: /images/logo.jpg  #网站logo，会在浏览器页面标签左上角显示</div><div class="line"></div><div class="line"># URL 博客地址,与申请的GitHub一致</div><div class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class="line">url: https://fzy-line.github.io/</div><div class="line">root: /</div><div class="line">#博客链接格式</div><div class="line">permalink: :year/:month/:day/:title/</div><div class="line">permalink_defaults:</div><div class="line"></div><div class="line"># Directory  #目录设置，一般不修改</div><div class="line">source_dir: source  #资源文件夹，放在里面的文件会上传到github中</div><div class="line">public_dir: public  #公共文件夹，存放生成的静态文件</div><div class="line">tag_dir: tags  #标签文件夹，默认是tags。实际存放在source/tags中。</div><div class="line">archive_dir: archives  #档案文件夹，默认是archives。</div><div class="line">category_dir: categories  #分类文件夹，默认是categories。实际存放在source/categories中。</div><div class="line">code_dir: downloads/code  #代码文件夹，默认是downloads/code</div><div class="line">i18n_dir: :lang  #国际化文件夹，默认跟language相同</div><div class="line">skip_render:  #跳过指定文件的渲染，您可使用 glob 来配置路径。</div><div class="line"></div><div class="line"># Writing  这是文章布局、写作格式的定义，一般不修改</div><div class="line">new_post_name: :title.md # File name of new posts</div><div class="line">default_layout: post</div><div class="line">titlecase: false # Transform title into titlecase</div><div class="line">external_link: true # Open external links in new tab</div><div class="line">filename_case: 0</div><div class="line">render_drafts: false</div><div class="line">post_asset_folder: false</div><div class="line">relative_link: false</div><div class="line">future: true</div><div class="line">highlight:</div><div class="line"> enable: true</div><div class="line"> line_number: true</div><div class="line"> auto_detect: false</div><div class="line"> tab_replace:</div><div class="line"></div><div class="line"># Category &amp; Tag  #分类和标签，一般不修改</div><div class="line">default_category: uncategorized</div><div class="line">category_map:</div><div class="line">tag_map:</div><div class="line"></div><div class="line"># Date / Time format  #日期、时间格式，一般不修改</div><div class="line">## Hexo uses Moment.js to parse and display date</div><div class="line">## You can customize the date format as defined in</div><div class="line">## http://momentjs.com/docs/#/displaying/format/</div><div class="line">date_format: YYYY-MM-DD</div><div class="line">time_format: HH:mm:ss</div><div class="line"></div><div class="line"># Pagination  #可根据自己需要修改</div><div class="line">## Set per_page to 0 to disable pagination</div><div class="line">per_page: 6  #分页，每页文章数量</div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"># Extensions  #扩展</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">theme: next  #博客主题</div><div class="line"></div><div class="line"># Deployment 这里配置站点部署到Github，上一节中已经讲过</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line"> type: git</div><div class="line"> repository: git@github.com:你的Github用户名.github.io.git</div><div class="line"> branch: master</div></pre></td></tr></table></figure><h4 id="hexo使用主题"><a href="#hexo使用主题" class="headerlink" title="hexo使用主题"></a>hexo使用主题</h4><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。</p><p>hexo官方主题下载地址：<a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a>，里面有多种多样的主题模板供大家选择。</p><p>这里推荐一款很火的主题：next，下面的配置也是以这个主题为例。如果你使用的是其他的主题，那么请你自己根据说明文档进行配置。</p><p>next主题的官网，有很详细的配置文档：<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">http://theme-next.iissnan.com/</a></p><h5 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h5><p>next下载地址：<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">https://github.com/iissnan/hexo-theme-next</a></p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/2-1.png" alt="2-1"></p><p>到Gtihub下载此主题后解压，打开可以看到里面很多主题相关的文件，我们将此文件夹改名为next，然后将它复制到站点目录的/themes/目录下。</p><h5 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h5><p>hexo默认是使用的landscape主题，我们可以在站点目录下的/themes/目录下看到landscape文件夹。</p><p>我们的themes文件夹里可以放很多主题的文件夹，但是实际上我们的网站采用哪一个主题，这是需要我们进行配置的，打开编辑全局配置文件，找到下面的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Extensions  #扩展</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">theme: next  #博客主题，默认是landscape</div></pre></td></tr></table></figure><p>在theme字段这里填上你下载的主题的文件夹的名字，例如我们使用next主题就填上next。这样配置文件就和我们的主题文件关联起来了。</p><h5 id="配置主题配置文件"><a href="#配置主题配置文件" class="headerlink" title="配置主题配置文件"></a>配置主题配置文件</h5><p>主题配置文件位于站点目录下的/themes/next/目录下，打开编辑，这里我们只贴出需要修改的地方进行介绍，如下：</p><p><strong>（1）配置基本信息</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># 网站图标，将其放在hexo站点/source/目录下</div><div class="line">favicon: /logo.jpg</div><div class="line"></div><div class="line"># 关键词，例如下面是我写的</div><div class="line">keywords: &quot;Python,Life,Android&quot;</div><div class="line"></div><div class="line"># 网站建立时间，显示在页面底部</div><div class="line">since: 2016</div><div class="line"></div><div class="line"># 网站版权声明，显示在页面底部</div><div class="line">copyright: true</div></pre></td></tr></table></figure><p><strong>（2）选择外观样式</strong></p><p>目前 NexT 支持三种 Scheme，他们是：</p><p>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</p><p>Mist - Muse 的紧凑版本，整洁有序的单栏外观</p><p>Pisces - 双栏 Scheme，小家碧玉似的清新</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/2-2.png" alt="2-2"></p><p>找到主题配置文件的如下三行，其中#号表示注释，要启用哪一种样式就把#号去掉即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Schemes</div><div class="line">#scheme: Muse</div><div class="line">#scheme: Mist</div><div class="line">scheme: Pisces</div></pre></td></tr></table></figure><p><strong>（3）设置菜单</strong></p><p>菜单内容的设置格式是：item name: link。其中 item name 是一个名称，这个名称并不直接显示在页面上，它将用于匹配图标以及翻译。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line"> home: /</div><div class="line"> archives: /archives</div><div class="line"> categories: /categories</div><div class="line"> tags: /tags</div><div class="line"> about: /about</div><div class="line"> #sitemap: /sitemap.xml</div><div class="line"> #commonweal: /404.html</div></pre></td></tr></table></figure><p>此设定格式是 item name: icon name，其中 item name 与上一步所配置的菜单名字对应，icon name 是 Font Awesome 图标的 名字。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">menu_icons:</div><div class="line"> enable: true</div><div class="line"> #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</div><div class="line"> home: home</div><div class="line"> about: user</div><div class="line"> categories: th</div><div class="line"> schedule: calendar</div><div class="line"> tags: tags</div><div class="line"> archives: archive</div><div class="line"> sitemap: sitemap</div><div class="line"> commonweal: heartbeat</div></pre></td></tr></table></figure><h5 id="测试配置效果"><a href="#测试配置效果" class="headerlink" title="测试配置效果"></a>测试配置效果</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean #用于清除缓存</div><div class="line">$ hexo generate #生成静态网页</div><div class="line">$ hexo server #开启本地预览</div></pre></td></tr></table></figure><p>访问：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 查看效果，如下图：</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/2-3.png" alt="2-3"></p><h5 id="解决遇到的问题"><a href="#解决遇到的问题" class="headerlink" title="解决遇到的问题"></a>解决遇到的问题</h5><p>到这里会发现点击左侧菜单的分类、标签和关于会提示找不到页面。</p><p>这是因为我们只是创建了菜单，还没有创建相应的页面。</p><p>新建页面的hexo命令是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page &quot;pageName&quot;</div></pre></td></tr></table></figure><p>我们新建分类、标签、关于页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page &apos;categories&apos;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page &apos;tags&apos;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page &apos;about&apos;</div></pre></td></tr></table></figure><p>分别执行完这三条命令后，我们会发现站点目录下的/source/目录下多了三个文件夹：categories，tags，about，每个文件夹里面都会生成一个index.md文件，如下：</p><p>默认都只会生成title和date字段，我们要为其添加上type字段，并赋值。</p><p><strong>注意：博客文章的抬头信息中每个字段后面的冒号是英文格式的，而且其后要加一个空格再写值</strong></p><p>categories下的index.md：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: categories</div><div class="line">date: 2016-12-02 23:28:27</div><div class="line">type: categories</div><div class="line">---</div></pre></td></tr></table></figure><p>tags下的index.md：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: tags</div><div class="line">date: 2016-12-02 23:31:23</div><div class="line">type: tags</div><div class="line">---</div></pre></td></tr></table></figure><p>about下的index.md：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: about</div><div class="line">date: 2016-12-02 23:31:23</div><div class="line">type: about</div><div class="line">---</div></pre></td></tr></table></figure><p>这样我们的这几个页面也就没有问题了。至此，基本的配置也就完成了，接下来介绍如何写博客与发布博客。</p><h4 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h4><h5 id="新建博客文章"><a href="#新建博客文章" class="headerlink" title="新建博客文章"></a>新建博客文章</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new &quot;postName&quot; #新建文章</div></pre></td></tr></table></figure><p>实例：</p><p>新建博客《我的第一篇博客》</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new &quot;我的第一篇博客&quot;</div></pre></td></tr></table></figure><p>到站点目录下的/source/_posts/目录下可以看到生成了名为：我的第一篇博客.md的文件，这是Markdown格式的文件，可以用sublime text3或者notepad++等编辑器打开，也可以下载一个MarkdownPad来编辑Markdown文件。</p><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><p>如果你没有使用过Markdown编辑器，那请你自己去学习一下Markdown语法。</p><p>Markdown 语法说明(简体中文版)：<a href="http://www.appinn.com/markdown/" target="_blank" rel="external">http://www.appinn.com/markdown/</a></p><h5 id="编辑博客"><a href="#编辑博客" class="headerlink" title="编辑博客"></a>编辑博客</h5><p>Hexo默认新建的文章抬头已有title、date、tags等属性，可能缺乏categories和meta标签，想要指定目录就需要添加categories属性，而meta标签则是为了便于搜索引擎的收录。如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 我的第一篇博客</div><div class="line">date: 2016-12-02 23:44:20</div><div class="line">tags: #文章标签 可以省略</div><div class="line">---</div></pre></td></tr></table></figure><p>tags字段是文章的标签，可以指定标签也可以不指定，如果要指定多个标签需要这样做：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tags: [Linux,Http,网络]</div></pre></td></tr></table></figure><p>我们可以添加上categories字段，对博客进行分类管理，然后点击主页左侧菜单的分类就可看到具体的分类。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">categories: Linux</div></pre></td></tr></table></figure><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/2-4.png" alt="2-4"></p><p><strong>如何实现上图的阅读全文功能？</strong></p><p>在自己喜欢的位置添加一个：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!--more--&gt;</div></pre></td></tr></table></figure></p><p>即可，主题会自动识别这个标签，生成对应的阅读全文按钮。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">以上是文章摘要</div><div class="line">&lt;!--more--&gt;</div><div class="line">以下是余下全文</div></pre></td></tr></table></figure><h5 id="发布博客-1"><a href="#发布博客-1" class="headerlink" title="发布博客"></a>发布博客</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo clean  #清除缓存 网页正常情况下可以忽略此条命令</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate  #生成静态页面至public目录</div></pre></td></tr></table></figure><p>写好之后可以现在本地预览，确定无误之后再部署到Github上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server  #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy  #将.deploy目录部署到GitHub</div></pre></td></tr></table></figure><p>需要说明的是：</p><p>我们博客文章的编写都是Markdown文件，但是发布到github上的其实是html文件，将Markdown转换成html这个工作我们只要输入hexo generate命令即可，hexo会帮我们完成转换。</p><h4 id="hexo命令简写形式"><a href="#hexo命令简写形式" class="headerlink" title="hexo命令简写形式"></a>hexo命令简写形式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot;</div><div class="line">hexo g == hexo generate</div><div class="line">hexo s == hexo server</div><div class="line">hexo d == hexo deploy</div></pre></td></tr></table></figure><p>使用简写形式可以使操作不至于太繁琐。</p><h3 id="第三方服务的配置"><a href="#第三方服务的配置" class="headerlink" title="第三方服务的配置"></a>第三方服务的配置</h3><p>再次强调：在Hexo中有两份主要的配置文件，其名称都是_config.yml。其中，一份位于站点根目录下，主要包含Hexo本身的配置,我们称之为<strong>全局配置文件</strong>；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项,我们称之为<strong>主题配置文件</strong>。</p><h4 id="博客图片存放"><a href="#博客图片存放" class="headerlink" title="博客图片存放"></a>博客图片存放</h4><p>Markdown编辑器支持插入图片，可以直接给出图片的链接，因此我们可以将图片存放在我们hexo项目的目录下，再填写对应的路径，也可以将其存放在云服务器上，然后给出链接。</p><p>在这里，我们介绍使用七牛云来进行图片托管。七牛云是国内领先的企业级云服务商,致力于打造以数据为核心的场景化PaaS服务，图片加载速度还不错，一般也不会出现图片挂掉的情况。</p><h5 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h5><p>注册申请一个个人账号，然后激活邮箱完成注册。</p><p>官网地址：<a href="http://www.qiniu.com/" target="_blank" rel="external">http://www.qiniu.com/</a></p><h5 id="存储图片"><a href="#存储图片" class="headerlink" title="存储图片"></a>存储图片</h5><p>（1）点击左侧菜单的对象存储</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/5-1.png" alt="5-1"></p><p>（2）点击上端的添加来创建存储空间</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/5-2.png" alt="5-2"></p><p>（3）填写好基本信息，点击确定创建</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/5-3.png" alt="5-3"></p><p>（4）来到新创建的存储空间，点击内容管理</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/5-4.png" alt="5-4"></p><p>（5）在内容管理中可以看到文件列表，点击上传文件</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/5-5.png" alt="5-5"></p><p>（6）可以设置上传的文件的前缀，以便进行分类管理</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/5-6.png" alt="5-6"></p><p>（7）点击关闭，回到内容管理页面查看上传的文件，复制图片链接</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/5-7.png" alt="5-7"></p><p>至此，我们就将我们博客需要的图片存储到了七牛云，然后我们只要将复制的图片链接插入到博客人文章中即可显示图片，感觉显示速度还是蛮快的。</p><h4 id="配置第三方服务"><a href="#配置第三方服务" class="headerlink" title="配置第三方服务"></a>配置第三方服务</h4><h5 id="多说社会化评论"><a href="#多说社会化评论" class="headerlink" title="多说社会化评论"></a>多说社会化评论</h5><p>（1）多说创建站点</p><p><a href="http://duoshuo.com/" target="_blank" rel="external">多说官网：http://duoshuo.com/</a></p><p>登录多说官网，点击主页的我要安装来到创建站点页面填写基本信息：</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/5-8.png" alt="5-8"></p><p>点击创建后出现：<strong>服务异常,请联系客服人员</strong>的错误不是因为真的出现异常，而是你填写的用户名或者其他信息不符合他的要求，只是他没有提示你，这是需要注意的地方。比如我遇到的是用户名不能使用‘-’中划线和‘_’下划线，或者多说域名填写格式错误。</p><p>（2）创建站点完成后在全局配置文件中新增duoshuo_shortname字段。</p><p>值设置成上一步中填写的值（红色方框框出部分的值）</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">duoshuo_shortname: fzyLine</div></pre></td></tr></table></figure><p>（3）实现效果</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/5-9.png" alt="5-9"></p><h5 id="多说分享"><a href="#多说分享" class="headerlink" title="多说分享"></a>多说分享</h5><p>多说分享必须与多说评论同时使用</p><p>编辑全局配置文件，添加字段 duoshuo_share，值为 true。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 多说分享服务</div><div class="line">duoshuo_share: true</div></pre></td></tr></table></figure><p>实现效果：</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/5-10.png" alt="5-10"></p><h5 id="不蒜子统计"><a href="#不蒜子统计" class="headerlink" title="不蒜子统计"></a>不蒜子统计</h5><p>编辑全局配置文件中的busuanzi_count的配置项。</p><p>当enable: true时，代表开启全局开关。若site_uv、site_pv、page_pv的值均为false时，不蒜子仅作记录而不会在页面上显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">busuanzi_count:</div><div class="line">  # count values only if the other configs are false</div><div class="line">  enable: true</div><div class="line">  # custom uv span for the whole site</div><div class="line">  site_uv: true</div><div class="line">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt;    #如果使用默认的，会显示图标</div><div class="line">  site_uv_footer:</div><div class="line">  # custom pv span for the whole site</div><div class="line">  site_pv: true</div><div class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;     #如果使用默认的，会显示图标</div><div class="line">  site_pv_footer:</div><div class="line">  # custom pv span for one page only</div><div class="line">  page_pv: true</div><div class="line">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt;  #如果使用默认的，会显示图标</div><div class="line">  page_pv_footer:</div></pre></td></tr></table></figure><p>实现效果：</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/5-11.png" alt="5-11"></p><p>可以修改成如下的样子：</p><p>当site_uv: true时，代表在页面底部显示站点的UV值。即访客数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 效果：本站访客数12345人次</div><div class="line">site_uv: true</div><div class="line">site_uv_header: 本站访客数</div><div class="line">site_uv_footer: 人次</div></pre></td></tr></table></figure><p>当site_pv: true时，代表在页面底部显示站点的PV值。即总访问量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 效果：本站总访问量12345次</div><div class="line">site_pv: true</div><div class="line">site_pv_header: 本站总访问量</div><div class="line">site_pv_footer: 次</div></pre></td></tr></table></figure><p>当page_pv: true时，代表在文章页面的标题下显示该页面的PV值（阅读数）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 效果：本文总阅读量12345次</div><div class="line">page_pv: true</div><div class="line">page_pv_header: 本文总阅读量</div><div class="line">page_pv_footer: 次</div></pre></td></tr></table></figure></p><h5 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h5><p>next主题的官方文档提供了几种实现搜索服务的方式，我们就使用配置最简单的Local Search，添加百度/谷歌/本地 自定义站点内容搜索。</p><p>（1）安装 hexo-generator-searchdb，在站点目录下执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-searchdb --save</div></pre></td></tr></table></figure><p>（2）编辑全局配置文件，新增以下内容到任意位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">search:</div><div class="line">  path: search.xml</div><div class="line">  field: post</div><div class="line">  format: html</div><div class="line">  limit: 10000</div></pre></td></tr></table></figure><p>（3）实现效果：</p><p><img src="http://ohe7ixo05.bkt.clouddn.com/2016/12/5-12.png" alt="5-12"></p><h5 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h5><p>next主题开启打赏功能很简单，我们只需要在全局配置文件中填入微信和支付宝收款二维码图片地址即可开启该功能。先到微信和支付宝将自己收款二维码图片保存，我们同样可以将其存在七牛云上，然后贴到下面的配置文件里。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</div><div class="line">wechatpay: 微信当面付图片的url</div><div class="line">alipay: 支付宝当面付图片的url</div></pre></td></tr></table></figure><p>实现效果：略</p><h3 id="相关问题补充"><a href="#相关问题补充" class="headerlink" title="相关问题补充"></a>相关问题补充</h3><h4 id="博客备份工具"><a href="#博客备份工具" class="headerlink" title="博客备份工具"></a>博客备份工具</h4><p>一直想着怎么把博客备份一下，以便丢失时或者是换电脑时能够接着写博客，终于找到一个靠谱的插件，直接将文件备份在博客的仓库中的不同分支，十分方便。<br>项目地址：<a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="external">https://github.com/coneycode/hexo-git-backup</a></p><h5 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h5><p>　　如果hexo的版本是2.x.x则执行如下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-git-backup@0.0.91 --save</div></pre></td></tr></table></figure><p>　　如果hexo的版本是3.x.x, 则执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-git-backup --save</div></pre></td></tr></table></figure><h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><p>　　在站点配置文件_config.yml中添加如下信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">backup:</div><div class="line">  type: git     # 指定提交类型</div><div class="line">  message: update xxx   # 添加git commit信息</div><div class="line">  repository:   # 指定仓库类型和地址</div><div class="line">    github: git@github.com:xxx/xxx.git,分支名字</div></pre></td></tr></table></figure><h5 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h5><p>　　使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo backup</div></pre></td></tr></table></figure><p>　　或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo b</div></pre></td></tr></table></figure><p>　　备份成功后，可以在Github上查看我们新建的备份分支。</p><h4 id="使用Latex数学公式"><a href="#使用Latex数学公式" class="headerlink" title="使用Latex数学公式"></a>使用Latex数学公式</h4><p>　　Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签，比如在markdown语法中，下划线’_’代表斜体，会被渲染引擎处理为<em>标签。</em></p><p>　　因为类Latex格式书写的数学公式下划线 ‘_’ 表示下标，有特殊的含义，如果被强制转换为<em>标签，那么MathJax引擎在渲染数学公式的时候就会出错。例如，$x_i$在开始被渲染的时候，处理为$x<em>i</em>$，这样MathJax引擎就认为该公式有语法错误，因为不会渲染。</em></p><p>　　类似的语义冲突的符号还包括’*’, ‘{‘, ‘}’, ‘\’等。</p><p>　　进入到主题目录，找到_config.yml配置问题，把mathjax默认的false修改为true，具体如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># MathJax Support</div><div class="line">mathjax:</div><div class="line">  enable: true</div><div class="line">  per_page: true</div></pre></td></tr></table></figure><p>　　此外，还需要在文章的Front-matter里打开mathjax开关，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: index.html</div><div class="line">date: 2017-03-28 21:01:30</div><div class="line">tags:</div><div class="line">mathjax: true</div><div class="line">--</div></pre></td></tr></table></figure><h4 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h4><p>　　前面说过使用七牛云进行图片存储，其实也可以直接使用我们的Hexo github仓库进行图片存储。</p><p>　　方法一：在hexo/source目录下新建一个img文件夹，将图片放入该文件夹下，插入图片时链接即为/img/图片名称</p><p>　　方法二：直接将图片放在public目录下对应的博客文章的目录下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![你想输入的替代文字](xxxx/图片名.jpg)</div></pre></td></tr></table></figure><p>　　但是，这样做也存在一定的缺点，因为Github仓库的的大小也是受限的，所以图片太多就比较麻烦了，所以还是建议用图床等其他云存储方式。</p><h4 id="插入音乐"><a href="#插入音乐" class="headerlink" title="插入音乐"></a>插入音乐</h4><p>　　网音乐云音乐，虾米音乐都可以生成内嵌音乐的html代码，在其网页端找到喜欢的歌曲，点击分享按钮，把里面的代码复制下来，直接粘贴到博文中即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86   </div><div class="line">    src=&quot;http://music.163.com/outchain/player?type=2&amp;id=450853439&amp;auto=1&amp;height=66&quot;&gt;  </div><div class="line">&lt;/iframe&gt;</div></pre></td></tr></table></figure><h4 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h4><p>　　将优酷等视频平台提供的视频外链或者自己制作的视频外链替换掉如下src的值即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;iframe   </div><div class="line">    height=498 width=510   </div><div class="line">    src=&quot;http://player.youku.com/embed/XNjcyMDU4Njg0&quot;   </div><div class="line">    frameborder=0 allowfullscreen&gt;  </div><div class="line">&lt;/iframe&gt;</div></pre></td></tr></table></figure><h4 id="百度-google收录你的站点"><a href="#百度-google收录你的站点" class="headerlink" title="百度/google收录你的站点"></a>百度/google收录你的站点</h4><h5 id="安装sitemap插件"><a href="#安装sitemap插件" class="headerlink" title="安装sitemap插件"></a>安装sitemap插件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap --save  # google</div><div class="line">npm install hexo-generator-baidu-sitemap --save  # 百度</div></pre></td></tr></table></figure><p>　　在站点配置文件_config.yml中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 自动生成sitemap</div><div class="line">sitemap:</div><div class="line">  path: sitemap.xml</div><div class="line">baidusitemap:</div><div class="line">  path: baidusitemap.xml</div></pre></td></tr></table></figure><p>　　执行hexo -g后会在public目录下生成baidusitmap.xml 和 sitemap.xml两个文件。</p><h4 id="Hexo-3-xx版本的问题"><a href="#Hexo-3-xx版本的问题" class="headerlink" title="Hexo 3.xx版本的问题"></a>Hexo 3.xx版本的问题</h4><p>　　Hexo 3.0 把服务器独立成了个别模块，您必须先安装 hexo-server 才能使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-server --save</div></pre></td></tr></table></figure><p>　　安装完成后，输入以下命令以启动服务器，您的网站会在 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。</p><p>　　然后，通过如下命令可开启本地预览：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>　　或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure><p>　　如果您想要更改端口，或是在执行时遇到了 EADDRINUSE 错误，可以在执行时使用 -p 选项指定其他端口，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server -p 5000</div></pre></td></tr></table></figure><h3 id="Hello-Hexo-Quick-Start"><a href="#Hello-Hexo-Quick-Start" class="headerlink" title="Hello Hexo:Quick Start"></a>Hello Hexo:Quick Start</h3><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h4 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h4 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h4 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h4 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;本文整理了如何利用github + hexo 搭建个人博客。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://www.dixinkai.top/blog/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://www.dixinkai.top/blog/tags/Hexo/"/>
    
      <category term="Github" scheme="https://www.dixinkai.top/blog/tags/Github/"/>
    
  </entry>
  
</feed>
